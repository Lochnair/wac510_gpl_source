diff --git a/include/uapi/linux/if.h b/include/uapi/linux/if.h
index 3daa912..2d56772 100644
--- a/include/uapi/linux/if.h
+++ b/include/uapi/linux/if.h
@@ -86,6 +86,7 @@
 #define IFF_MACVLAN 0x200000		/* Macvlan device */
 #define IFF_NO_IP_ALIGN	0x200000	/* do not ip-align allocated rx pkts */
 #define IFF_WIFI_VAP 0x400000
+#define ISOLATE_VAP 0x10000000      /*Isolate the Wifi VAP from other VAPs */
 
 #if CONFIG_HTTP_REDIRECT_ENABLED
 #define IFF_CAPTIVE_FLAG 0x800000
diff --git a/net/bridge/br_forward.c b/net/bridge/br_forward.c
index 62e33ac..bb5a4a9 100644
--- a/net/bridge/br_forward.c
+++ b/net/bridge/br_forward.c
@@ -24,6 +24,7 @@
 #include "br_hook.h"
 
 #if defined(CONFIG_BRISO_ENABLED)
+#define IS_ISOLATION_ENABLED(dev) (dev->priv_flags & ISOLATE_VAP)
 #define IS_WIFI_VAP(dev) (dev->priv_flags & IFF_WIFI_VAP)
 #define VAP_OF_SAME_RADIO(indev, outdev)\
                  (memcmp(indev->name, outdev->name, 5) == 0)
@@ -49,7 +50,7 @@ static inline int briso_block_unicast(struct net_device *indev,
 
         if((briso_unicast_enabled == ALL_RADIO) && !is_multi &&
            IS_WIFI_VAP(indev) && IS_WIFI_VAP(outdev) &&
-           VAP_OF_SAME_RADIO(indev, outdev))
+		   (IS_ISOLATION_ENABLED(indev) || IS_ISOLATION_ENABLED(outdev)))
                     return 1;
         else if((briso_unicast_enabled == ON_2GHZ) && !is_multi &&
                 IS_WIFI_VAP(indev) && IS_WIFI_VAP(outdev) &&
@@ -72,9 +73,9 @@ static inline int briso_block_multicast(struct net_device *indev,
         const unsigned char *dest = eth_hdr(skb)->h_dest;
         int is_multi = is_multicast_ether_addr(dest);
 
-        if((briso_unicast_enabled == ALL_RADIO) && is_multi &&
+        if((briso_multicast_enabled == ALL_RADIO) && is_multi &&
            IS_WIFI_VAP(indev) && IS_WIFI_VAP(outdev) &&
-           VAP_OF_SAME_RADIO(indev, outdev))
+           (IS_ISOLATION_ENABLED(indev) || IS_ISOLATION_ENABLED(outdev)))
                     return 1;
         else if((briso_unicast_enabled == ON_2GHZ) && is_multi &&
                IS_WIFI_VAP(indev) && IS_WIFI_VAP(outdev) &&
